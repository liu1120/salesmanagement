<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzlbe.dao.mapper.OrderMapper">

    <resultMap id="BaseMap" type="com.zzlbe.dao.entity.OrderEntity">
        <result column="or_id" property="orId"/>
        <result column="or_goods_id" property="orGoodsId"/>
        <result column="or_count" property="orCount"/>
        <result column="or_price" property="orPrice"/>
        <result column="or_say" property="orSay"/>
        <result column="or_total_amount" property="orTotalAmount"/>
        <result column="or_datetime" property="orDatetime"/>
        <result column="or_seller_id" property="orSellerId"/>
        <result column="or_user_id" property="orUserId"/>
        <result column="or_type" property="orType"/>
        <result column="or_logistics" property="orLogistics"/>
        <result column="or_address" property="orAddress"/>
        <result column="or_status" property="orStatus"/>
        <result column="or_words" property="orWords"/>
        <result column="or_refuse" property="orRefuse"/>
    </resultMap>
    <resultMap id="Order2Search" type="com.zzlbe.dao.search.Order2Search">
        <result column="or_id" property="orId"/>
        <result column="or_goods_id" property="orGoodsId"/>
        <result column="go_name" property="gname"/>
        <result column="go_newimgpath" property="gimg"/>
        <result column="or_count" property="orCount"/>
        <result column="or_price" property="orPrice"/>
        <result column="or_say" property="orSay"/>
        <result column="or_total_amount" property="orTotalAmount"/>
        <result column="or_datetime" property="orDatetimeStr"/>
        <result column="or_seller_id" property="orSellerId"/>
        <result column="or_user_id" property="orUserId"/>
        <result column="or_type" property="orType"/>
        <result column="or_logistics" property="orLogistics"/>
        <result column="or_address" property="orAddress"/>
        <result column="or_status" property="orStatus"/>
        <result column="or_words" property="orWords"/>
        <result column="or_refuse" property="orRefuse"/>
    </resultMap>
    <resultMap id="AmountSearch" type="com.zzlbe.dao.search.AmountSearch">
        <result column="month" property="month"/>
        <result column="totalmoney" property="amt"/>
    </resultMap>
    <resultMap id="GoodsSellSearch" type="com.zzlbe.dao.search.GoodssellSearch">
        <result column="month" property="month"/>
        <result column="count" property="count"/>
    </resultMap>
    <resultMap id="Goodsselltop10Search" type="com.zzlbe.dao.search.Goodsselltop10Search">
        <result column="or_goods_id" property="id"/>
        <result column="go_name" property="name"/>
        <result column="count" property="count"/>
    </resultMap>


    <resultMap id="Sellertop10Search" type="com.zzlbe.dao.search.Sellertop10Search">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="count" property="count"/>
    </resultMap>

    <resultMap id="creditGetByOrder" type="com.zzlbe.dao.search.CreditGetByOrderVO">
        <result column="or_count" property="count"/>
        <result column="go_credit" property="credit"/>
        <result column="total_credit" property="totalCredit"/>
        <result column="go_name" property="goodsName"/>
        <result column="go_version" property="goodsVersion"/>
        <result column="go_introduce" property="goodsIntroduce"/>
        <result column="go_newimgpath" property="goodsImagePath"/>
    </resultMap>

    <sql id="tableName">tb_order</sql>

    <sql id="columns">
        or_id,
        or_goods_id,
        or_count,
        or_price,
        or_say,
        or_total_amount,
        or_datetime,
        or_seller_id,
        or_user_id,
        or_type,
        or_logistics,
        or_address,
        or_status,
        or_words,
        or_refuse
    </sql>

    <sql id="condition">
        <where>
            <if test="orId != null">
                AND or_id REGEXP #{orId}
            </if>
            <if test="orGoodsId != null">
                AND or_goods_id = #{orGoodsId}
            </if>
            <if test="orCount != null">
                AND or_count = #{orCount}
            </if>
            <if test="orPrice != null">
                AND or_price = #{orPrice}
            </if>
            <if test="orSay != null">
                AND or_say = #{orSay}
            </if>
            <if test="orTotalAmount != null">
                AND or_total_amount = #{orTotalAmount}
            </if>
            <if test="orDatetimeStr != null">
                AND or_datetime REGEXP #{orDatetimeStr}
            </if>
            <if test="orSellerId != null">
                AND or_seller_id = #{orSellerId}
            </if>
            <if test="orUserId != null">
                AND or_user_id = #{orUserId}
            </if>
            <if test="orType != null">
                AND or_type = #{orType}
            </if>
            <if test="orLogistics != null">
                AND or_logistics = #{orLogistics}
            </if>
            <if test="orAddress != null">
                AND or_address = #{orAddress}
            </if>
            <if test="orStatus != null">
                AND or_status = #{orStatus}
            </if>
            <if test="orWords != null">
                AND or_words REGEXP #{orWords}
            </if>
            <if test="orRefuse != null">
                AND or_refuse REGEXP #{orRefuse}
            </if>
        </where>
    </sql>

    <select id="selectById" resultMap="BaseMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="tableName"/>
        WHERE or_id = #{id}
    </select>

    <select id="selectByUid" resultMap="BaseMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="tableName"/>
        WHERE or_user_id = #{uid}
    </select>
    <select id="selectByPage" resultMap="BaseMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="tableName"/>
        <include refid="condition"/>
        LIMIT #{firstIndex}, #{size}
    </select>

    <select id="select2ByPage" resultMap="Order2Search">
        select * from tb_order t1
        left join tb_goods t2
        on t1.or_goods_id = t2.go_id
        <include refid="condition"/>
        LIMIT #{firstIndex}, #{size}
    </select>


    <select id="selectByPageTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM
        <include refid="tableName"/>
        <include refid="condition"/>
    </select>

    <select id="getTotalAmountByMonth" resultMap="AmountSearch">
        select date_format(or_datetime, '%Y-%m') as month, sum(or_total_amount) as totalmoney
        from tb_order where or_datetime>date_add(last_day(date_sub(curdate(), interval 1 year)), interval 1 day)
        AND or_type=1
        AND or_status>6
        group by date_format(or_datetime, '%Y-%m')
    </select>

    <select id="getGoodSellTop10" resultMap="Goodsselltop10Search">
        SELECT or_goods_id,go_name,SUM(or_count) as count from tb_order AS a
        LEFT JOIN tb_goods AS b ON a.or_goods_id=b.go_id
        where or_datetime>DATE_SUB(CURDATE(), INTERVAL 6 MONTH)
        GROUP BY or_goods_id ORDER BY count DESC LIMIT 10
    </select>

    <select id="getGoodSell" resultMap="GoodsSellSearch">
        select date_format(or_datetime, '%Y-%m') as month, sum(or_count) as count
        from tb_order
        where or_datetime>date_add(last_day(date_sub(curdate(), interval 6 MONTH)), interval 1 day)
        AND or_type=1
        AND or_status>6
        AND or_goods_id=#{id}
        group by date_format(or_datetime, '%Y-%m')
    </select>

    <select id="getSellerTop10" resultMap="Sellertop10Search">
        SELECT sp_id as id,sp_realname as name,SUM(or_total_amount) as count from tb_order AS a
        LEFT JOIN tb_seller AS b ON a.or_seller_id=b.sp_id
        where or_datetime>DATE_SUB(CURDATE(), INTERVAL 6 MONTH)
        GROUP BY sp_id ORDER BY count DESC LIMIT 10
    </select>

    <select id="getSellerSell" resultMap="GoodsSellSearch">
        select date_format(or_datetime, '%Y-%m') as month, sum(or_total_amount) as count
        from tb_order
        where or_datetime>date_add(last_day(date_sub(curdate(), interval 6 MONTH)), interval 1 day)
        AND or_type=1
        AND or_status>6
        AND or_seller_id=#{id}
        group by date_format(or_datetime, '%Y-%m')
    </select>

    <select id="selectByExample" resultMap="BaseMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="tableName"/>
        <include refid="condition"/>
        ORDER BY or_datetime DESC LIMIT 1
    </select>

    <select id="selectListByExample" resultMap="BaseMap">
        SELECT
        <include refid="columns"/>
        FROM
        <include refid="tableName"/>
        <include refid="condition"/>
    </select>

    <select id="selectCreditByUser" resultMap="creditGetByOrder">
        SELECT
        or_count,
        go_credit,
        (or_count * go_credit) AS total_credit,
        go_name,
        go_version,
        go_introduce,
        go_newimgpath
        FROM
        <include refid="tableName"/>
        LEFT JOIN tb_goods ON or_goods_id = go_id
        WHERE
        or_user_id = #{userId}
        <if test="orderStatusList != null">
            AND or_status IN
            <foreach collection="orderStatusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="selectCreditByUserTotal" resultType="long">
        SELECT
        SUM(or_count * go_credit)
        FROM
        <include refid="tableName"/>
        LEFT JOIN tb_goods ON or_goods_id = go_id
        WHERE
        or_user_id = #{userId}
        <if test="orderStatusList != null">
            AND or_status IN
            <foreach collection="orderStatusList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="update">
        UPDATE
        <include refid="tableName"/>
        <set>
            <if test="orGoodsId != null">
                or_goods_id = #{orGoodsId},
            </if>
            <if test="orCount != null">
                or_count = #{orCount},
            </if>
            <if test="orPrice != null">
                or_price = #{orPrice},
            </if>
            <if test="orSay != null">
                or_say = #{orSay},
            </if>
            <if test="orTotalAmount != null">
                or_total_amount = #{orTotalAmount},
            </if>
            <if test="orDatetime != null">
                or_datetime = #{orDatetime},
            </if>
            <if test="orSellerId != null">
                or_seller_id = #{orSellerId},
            </if>
            <if test="orUserId != null">
                or_user_id = #{orUserId},
            </if>
            <if test="orType != null">
                or_type = #{orType},
            </if>
            <if test="orLogistics != null">
                or_logistics = #{orLogistics},
            </if>
            <if test="orAddress != null">
                or_address = #{orAddress},
            </if>
            <if test="orStatus != null">
                or_status = #{orStatus},
            </if>
            <if test="orWords != null">
                or_words = #{orWords},
            </if>
            <if test="orRefuse != null">
                or_refuse = #{orRefuse},
            </if>
        </set>
        WHERE
        or_id = #{orId}
    </update>

    <insert id="insert" useGeneratedKeys="true" keyProperty="orId">
        INSERT INTO
        <include refid="tableName"/>
        (
        <include refid="columns"/>
        )
        VALUES
        (
        #{orId},
        #{orGoodsId},
        #{orCount},
        #{orPrice},
        #{orSay},
        #{orTotalAmount},
        #{orDatetime},
        #{orSellerId},
        #{orUserId},
        #{orType},
        #{orLogistics},
        #{orAddress},
        #{orStatus},
        #{orWords},
        #{orRefuse}
        )
    </insert>

</mapper>